/* tslint:disable */
/* eslint-disable */
/**
 * Employee List Api
 * Hospital Employee Administration for Web-In-Cloud system
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xbelake@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Role,
} from '../models';
import {
    RoleFromJSON,
    RoleToJSON,
} from '../models';

export interface GetRolesRequest {
    hospitalId: string;
}

/**
 * HospitalRolesApi - interface
 * 
 * @export
 * @interface HospitalRolesApiInterface
 */
export interface HospitalRolesApiInterface {
    /**
     * By using hospitalId you get list of predefined roles
     * @summary Provides the list of roles associated with hospital
     * @param {string} hospitalId pass the id of the particular hospital
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HospitalRolesApiInterface
     */
    getRolesRaw(requestParameters: GetRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Role>>>;

    /**
     * By using hospitalId you get list of predefined roles
     * Provides the list of roles associated with hospital
     */
    getRoles(requestParameters: GetRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Role>>;

}

/**
 * 
 */
export class HospitalRolesApi extends runtime.BaseAPI implements HospitalRolesApiInterface {

    /**
     * By using hospitalId you get list of predefined roles
     * Provides the list of roles associated with hospital
     */
    async getRolesRaw(requestParameters: GetRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Role>>> {
        if (requestParameters.hospitalId === null || requestParameters.hospitalId === undefined) {
            throw new runtime.RequiredError('hospitalId','Required parameter requestParameters.hospitalId was null or undefined when calling getRoles.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/employee-list/{hospitalId}/role`.replace(`{${"hospitalId"}}`, encodeURIComponent(String(requestParameters.hospitalId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(RoleFromJSON));
    }

    /**
     * By using hospitalId you get list of predefined roles
     * Provides the list of roles associated with hospital
     */
    async getRoles(requestParameters: GetRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Role>> {
        const response = await this.getRolesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
